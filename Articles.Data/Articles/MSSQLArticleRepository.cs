using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices.ComTypes;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;

namespace Articles.Data.Articles
{
    /// <summary>
    /// Represents MSSQLUserRepository
    /// </summary>
    /// <seealso cref="Articles.Data.Articles.IArticleRepository" />
    /// <autogeneratedoc />
    public class MSSQLArticleRepository : IArticleRepository
    {
        private ArticlesDbContext context;

        public MSSQLArticleRepository(ArticlesDbContext context)
        {
            this.context = context ?? throw new ArgumentNullException(nameof(context));
        }

        public async Task<List<Article>> GetArticlesAsync()
        {
           var articles =  await this.context.Articles.ToListAsync();

           return articles;
        }

        public async Task<Article> GetArticleAsync(int articleId)
        {
            return await context.Articles.FindAsync(articleId);
        }

        public async Task<Article> CreateArticlesAsync(Article article)
        {
            context.Articles.Add(article);

            await context.SaveChangesAsync();

            return article;
        }

        public async Task<Article> UpdateArticleAsync(Article article)
        {
            context.Entry(article).State = EntityState.Modified;

            await context.SaveChangesAsync();

            return article;
        }

        public async Task DeleteArticleAsync(int articleId)
        {
            var article = await context.Articles.FindAsync(articleId);

            context.Articles.Remove(article);

            await context.SaveChangesAsync();
        }
    }
}